a. Use positional matching with seq to create a sequence of values between −4 and 4 that progresses in steps of 0.2.

b. In each of the following lines of code, identify which style of argument matching is being used: exact, partial, positional, or mixed. If mixed, identify which arguments are specified in each style.
i. array(8:1,dim=c(2,2,2))
ii. rep(1:2,3)
iii. seq(from=10,to=8,length=5)
iv. sort(decreasing=T,x=c(2,1,1,2,0.3,3,1.3))
v. which(matrix(c(T,F,T,T),2,2))
vi. which(matrix(c(T,F,T,T),2,2),a=T)


c. Suppose you explicitly ran the plotting function plot.default and supplied values to arguments tagged type, pch, xlab, ylab, lwd, lty, and col. Use the function documentation to determine which of these arguments fall under the umbrella of the ellipsis.

Solution
a.
> seq(-4,4,0.2)
 [1] -4.0 -3.8 -3.6 -3.4 -3.2 -3.0 -2.8 -2.6 -2.4 -2.2 -2.0 -1.8 -1.6 -1.4 -1.2 -1.0
[17] -0.8 -0.6 -0.4 -0.2  0.0  0.2  0.4  0.6  0.8  1.0  1.2  1.4  1.6  1.8  2.0  2.2
[33]  2.4  2.6  2.8  3.0  3.2  3.4  3.6  3.8  4.0

b.
i. array(8:1,dim=c(2,2,2))
mixed. 8:1 is positional. dim=c(2,2,2) is exact.

ii. rep(1:2,3)
positional

iii. seq(from=10,to=8,length=5)
exact

iv. sort(decreasing=T,x=c(2,1,1,2,0.3,3,1.3))
exact

v. which(matrix(c(T,F,T,T),2,2))
mixed
which(), matrix() is exact
c(T,F,T,T),2,2 is positional

vi. which(matrix(c(T,F,T,T),2,2),a=T)
which(), matrix(), is exact
a = T is partial
c(T,F,T,T),2,2 is positional

c. 
> args(plot.default)
function (x, y = NULL, type = "p", xlim = NULL, ylim = NULL, 
    log = "", main = NULL, sub = NULL, xlab = NULL, ylab = NULL, 
    ann = par("ann"), axes = TRUE, frame.plot = axes, panel.first = NULL, 
    panel.last = NULL, asp = NA, ...) 
    
